name: Publish
on:
  release:
    types:
      - published

jobs:
  publish:
    if: "github.event.release.tag_name == 'major' || github.event.release.tag_name == 'minor' || github.event.release.tag_name == 'patch'"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
          token: ${{ secrets.DEPLOY_GITHUB_ACCESS_TOKEN }}
      - name: Remove the triggering release
        run: |
          curl -XDELETE \
            --url https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }} \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
          git push --delete origin ${{ github.event.release.tag_name }}
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Copy README.me
        run: |
          for i in packages/*; do cp README.md $i; done
      - run: |
          git config --global user.name "github-actions[bot]"
      - name: Publish to NPM
        run: |
          yarn install
          cp npmrc-ci .npmrc
          yarn lerna version ${{ github.event.release.tag_name }} --conventional-commits --create-release github --yes
          yarn lerna publish from-git --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to Pypi
        working-directory: ./packages/py-ab-testing
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install --upgrade pip setuptools wheel twine
          python setup.py sdist bdist_wheel
          twine upload dist/*
